{
  "app": {
    "title": "FreshComply Portal",
    "tagline": "Multi-tenant engagements & compliance workflows",
    "skipToContent": "Skip to main content",
    "loading": "Loading",
    "signedInAs": "Signed in as {user}",
    "signOut": "Sign out"
  },
  "navigation": {
    "home": "Home",
    "privacy": "Privacy",
    "terms": "Terms",
    "subprocessors": "Subprocessors",
    "cookies": "Cookies",
    "locale": "Language",
    "theme": "Theme"
  },
  "home": {
    "welcome": "Welcome to FreshComply",
    "intro": "Explore the workflow engine, freshness checks, document generation, and audit visibility in one place.",
    "viewTimeline": "View timeline",
    "openBoard": "Open task board",
    "demoWorkflow": "Demo workflow",
    "status": "Status: {status}",
    "timelinePlural": "You have {count, plural, one {# active step} other {# active steps}}",
    "statusLabel": {
      "todo": "To do",
      "in_progress": "In progress",
      "waiting": "Waiting",
      "blocked": "Blocked",
      "done": "Done"
    }
  },
  "actingFor": {
    "badge": "Acting on behalf",
    "toggleHide": "Hide engagement banner",
    "toggleShow": "Show engagement banner",
    "separator": "{engager} → {client}"
  },
  "audit": {
    "title": "Audit trail",
    "onBehalfOf": "On behalf of {organisation}"
  },
  "evidence": {
    "reverify": "Re-verify evidence",
    "pending": "Re-verifying…",
    "updated": "Evidence refreshed on {date, date, medium}",
    "notVerified": "Not yet verified"
  },
  "theme": {
    "light": "Light",
    "dark": "Dark",
    "contrast": "High contrast",
    "system": "System default",
    "label": "Theme preference",
    "reducedMotion": "Reduce motion"
  },
  "localeSwitcher": {
    "label": "Choose language"
  },
  "legal": {
    "privacy": {
      "title": "Privacy Notice",
      "updated": "Last updated {date, date, long}",
      "summary": "FreshComply explains how we process personal data as both controller and processor.",
      "cta": "Download full notice"
    },
    "terms": {
      "title": "Terms of Service",
      "summary": "Contractual terms governing access to the FreshComply platform.",
      "cta": "Read full terms"
    },
    "subprocessors": {
      "title": "Subprocessor Registry",
      "summary": "Vendors engaged to deliver the service and how we notify changes.",
      "cta": "View registry"
    },
    "cookies": {
      "title": "Cookie & Consent Policy",
      "summary": "Categories of cookies used and how to manage preferences.",
      "cta": "View cookie policy"
    }
  },
  "footer": {
    "legal": "Legal",
    "accessibility": "Accessibility statement",
    "gdprReady": "GDPR readiness"
  },
  "workflow": {
    "timelineHeading": "Workflow timeline",
    "timelineDescription": "Timeline view with phases, due dates, and assignments.",
    "evidenceHeading": "Evidence & rule verification",
    "evidenceDescription": "Review source links and refresh freshness checks as required.",
    "documentsHeading": "Documents",
    "downloadMarkdown": "Download {title}",
    "downloadPdf": "Download accessible PDF",
    "orchestrationHeading": "Execution & orchestration",
    "orchestrationDescription": "Launch Temporal workflows, send signals, or capture manual updates for each step.",
    "orchestrationTemporalHint": "Temporal worker handles retries and polling.",
    "orchestrationManualHint": "Manual execution tracked via calendar reminders and evidence uploads.",
    "orchestrationWebhookHint": "Invoke signed tenant webhooks and review response hashes.",
    "orchestrationStart": "Start",
    "orchestrationRetry": "Retry",
    "orchestrationSignal": "Send signal",
    "orchestrationSignalSuccess": "Signal delivered to Temporal workflow.",
    "orchestrationManualButton": "Mark done / upload proof",
    "orchestrationManualComplete": "Marked complete — upload evidence via the panel above.",
    "orchestrationWebhookButton": "Send webhook",
    "orchestrationWebhookSuccess": "Webhook dispatched (status {status}).",
    "orchestrationWebhookError": "Unable to invoke tenant webhook.",
    "orchestrationReceiptPlaceholder": "Receipt URL (optional)",
    "orchestrationReceiptLabel": "Receipt URL",
    "orchestrationStartSuccess": "Workflow started (ID: {workflowId})",
    "orchestrationUnknownError": "Unexpected orchestration error"
  },
  "board": {
    "title": "Task board",
    "description": "Drag-and-drop coming soon. For now, review assignments across workflow statuses.",
    "deadlines": "Upcoming deadlines",
    "noDueDate": "No due date",
    "due": "Due {date, date, medium}"
  },
  "auth": {
    "title": "Secure sign-in",
    "description": "Enter your email address and we'll send you a magic link to access FreshComply.",
    "emailLabel": "Work email",
    "submit": "Send magic link",
    "submitting": "Sending…",
    "success": "Check your inbox for a sign-in link. The link expires in 5 minutes.",
    "redirect": "After sign-in you'll be sent to {destination}.",
    "error": "We couldn't send the link. Please try again.",
    "supabaseUnavailable": "Supabase configuration is missing. Set NEXT_PUBLIC_SUPABASE_URL and NEXT_PUBLIC_SUPABASE_ANON_KEY to enable sign-in."
  },
  "overlayBuilder": {
    "heading": "Tenant overlay builder",
    "description": "Compose JSON Patch overlays with registry-backed steps and preview impact before publishing.",
    "base": {
      "heading": "Base workflow",
      "hint": "These are the core steps before tenant overlays are applied.",
      "optional": "Optional base step"
    },
    "add": {
      "heading": "Add registry step",
      "hint": "Select an approved step type, provide input defaults, and bind secret aliases.",
      "stepType": "Step type",
      "input": "Input JSON",
      "inputPlaceholder": "{ } // JSON payload for the step",
      "secret": "Secret alias",
      "secretPlaceholder": "Select alias (optional)",
      "executionLabel": "Execution config",
      "executionHint": "Configure runtime metadata for the selected step.",
      "executionWebhookMethod": "HTTP method",
      "executionWebhookUrlAlias": "Webhook URL alias",
      "executionWebhookTokenAlias": "Auth token alias",
      "executionWebhookPath": "Path (optional)",
      "executionWebhookSigningAlias": "Signing secret alias",
      "executionTemporalWorkflow": "Temporal workflow (override)",
      "executionTemporalTaskQueue": "Task queue",
      "executionTemporalDefaultTaskQueue": "Default task queue",
      "executionWebsocketUrlAlias": "WebSocket URL alias",
      "executionWebsocketTokenAlias": "Bearer token alias",
      "executionWebsocketMessageSchema": "Message schema ID",
      "executionWebsocketWorkflow": "Temporal workflow",
      "executionWebsocketQueue": "Default task queue"
    },
    "actions": {
      "insert": "Insert step",
      "reset": "Clear overlay",
      "persist": "Persist overlay snapshot"
    },
    "operations": {
      "heading": "Overlay operations (JSON Patch)"
    },
    "overlay": {
      "heading": "Overlay impact",
      "hint": "Review step additions/removals before publishing.",
      "count": "{count, plural, one {# overlay operation} other {# overlay operations}}",
      "added": "Added steps",
      "removed": "Removed steps"
    },
    "messages": {
      "persistSuccess": "Overlay snapshot queued for persistence.",
      "persistError": "Unable to persist overlay snapshot.",
      "mergeError": "Overlay merge failed",
      "secretRequired": "Select a secret alias before inserting this step.",
      "secretUnavailable": "No eligible secret bindings are available for this step type.",
      "executionWebhookUrlAliasRequired": "Select a webhook URL alias before inserting this step.",
      "executionWebsocketUrlAliasRequired": "Select a websocket URL alias before inserting this step.",
      "executionAliasInvalid": "Alias values must reference secret bindings, not literal URLs.",
      "executionAliasUnavailable": "No eligible secret aliases are available for this execution configuration."
    },
    "stepTypes": {
      "manualReview": {
        "title": "Manual review (dual control)",
        "summary": "Collect reviewer notes and capture evidence before approving the step."
      },
      "temporalWebhook": {
        "title": "Temporal webhook bridge",
        "summary": "Trigger a tenant-specific Temporal workflow via signed webhook requests."
      },
      "externalWebhook": {
        "title": "Tenant webhook call",
        "summary": "Invoke an external webhook with alias-resolved credentials and signing." 
      },
      "externalWebsocket": {
        "title": "WebSocket listener bridge",
        "summary": "Listen to tenant event streams and route messages via Temporal workflows."
      }
    },
    "secrets": {
      "crmApiToken": "CRM API token resolved at runtime.",
      "temporalQueue": "Temporal task queue signing key stored in vault.",
      "webhookBaseUrl": "Tenant webhook base URL alias.",
      "webhookToken": "Bearer token alias resolved per tenant.",
      "webhookSignature": "Webhook signature secret alias resolved per tenant.",
      "websocketUrl": "Tenant websocket endpoint alias.",
      "websocketToken": "Websocket bearer token alias."
    }
  },
  "funding": {
    "heading": "Funding Radar",
    "description": "Track public grant awards and calls so you can line up the next opportunity.",
    "totalResults": "{count, plural, one {# opportunity found} other {# opportunities found}}",
    "searchPlaceholder": "Search title or summary",
    "filters": {
      "domain": "Programme / domain",
      "county": "County",
      "year": "Award year",
      "submit": "Apply filters",
      "reset": "Reset"
    },
    "calendarExport": "Download calendar",
    "noResults": "No funding opportunities match the current filters.",
    "lead": "Lead institution",
    "amount": "Awarded",
    "callType": "Call type",
    "metadata": "{domain, select, other {{domain}}} {county, select, other {· {county}}}",
    "loadError": "Funding data unavailable right now. Please try again soon."
  }
}
